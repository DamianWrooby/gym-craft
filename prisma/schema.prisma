generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id                   String              @id @default(uuid())
  username             String              @unique
  email                String              @default("") @db.VarChar(50)
  emailVerified        Boolean             @default(false)
  marketingAgreement   Boolean             @default(false)
  passwordHash         String
  userAuthToken        String              @unique
  createdAt            DateTime            @default(now())
  updatedAt            DateTime            @updatedAt
  roleId               Int
  role                 Roles               @relation(fields: [roleId], references: [id])
  generatedPlansNumber Int                 @default(0)
  plans                Plan[]
  verificationTokens   VerificationToken[]

  @@index([roleId])
}

model Roles {
  id   Int    @id @default(autoincrement())
  name Role   @unique
  User User[]
}

model Plan {
  id          String   @id @default(uuid())
  name        String
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  userId      String
  User        User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

enum Role {
  ADMIN
  MODERATOR
  USER
}

model Configuration {
  id        String   @id @default(uuid())
  name      String
  value     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model VerificationToken {
  id        String    @id @default(uuid())
  userId    String
  tokenHash String    @unique
  expiresAt DateTime
  createdAt DateTime  @default(now())
  usedAt    DateTime?
  isUsed    Boolean   @default(false)

  User User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([tokenHash])
}
